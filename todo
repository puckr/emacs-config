;; Custom Functions
(defun revert-all-buffers ()
  "Refreshes all open buffers from their respective files, think git use case."
  (interactive)
  (dolist (buf (buffer-list))
    (with-current-buffer buf
      (when (and (buffer-file-name)
		 (file-exists-p (buffer-file-name))
		 (not (buffer-modified-p)))
	(revert-buffer t t t) )))
  (message "Refreshed open files."))

;; This takes care of all my irc needs.
(defun irc-connect ()
  "Connect to IRC, register nick, open commonly used channels"
  (interactive)
  (setq erc-max-buffer-size 20000
	erc-autojoin-channels-alist '(("freenode.net" "#ocaml" "#c++-general" "#algorithms"))
	erc-hide-list '("JOIN" "PART" "QUIT"))
  ;; This is obviously untracked, if you copy my init.el,
  ;; either delete this code or provide your own creds
  (let ((acc (read-lines "~/.emacs.d/these-erc-creds")))
    (setq erc-nick (car acc))
    (setq erc-password (nth 1 acc)))
  (add-hook 'erc-after-connect '(lambda (server nick)
				  (erc-message
				   "PRIVMSG"
				   (concat "NickServ identify " erc-password))))
  ;; This is what actually does the connection
  (erc :server "irc.freenode.net" :port 6667
       :nick "Algebr" :full-name user-full-name))


;; Misc things
(add-to-list 'auto-mode-alist '("\\zshrc\\'" . shell-script-mode))
(global-set-key (kbd "C-M-e") 'irc-connect)
(global-set-key (kbd "C-M-p") 'run-python)

;; Love ido, idiot for not using it earlier.
(setq ido-everywhere t)
(ido-mode 1)
(ido-vertical-mode)

;; Don't prompt me when I want to clear the buffer
(put 'erase-buffer 'disabled nil)

(indent-guide-global-mode)
;; (setq indent-guide-recursive t)
(show-paren-mode)
(auto-insert-mode)
(abbrev-mode -1)
(define-auto-insert "\\.org\\'" 'my-org-defaults)
(define-auto-insert "\\.c\\'" 'my-c-defaults)
(define-auto-insert "\\.hpp\\'" 'my-cpp-header-defaults)
(define-auto-insert "\\.m\\'" 'my-c-defaults)
(define-auto-insert "\\.html\\'" 'my-html-defaults)
(electric-pair-mode 1)
(setq inhibit-startup-message t
      scroll-step 1)

(defadvice linum-update-window (around linum-dynamic activate)
  (let* ((w (length (number-to-string
                     (count-lines (point-min) (point-max)))))
         (linum-format (concat " %" (number-to-string w) "d ")))
    ad-do-it))
(hlinum-activate)
(fringe-mode -1)

;; Python Stuff
;; Get these variables set before the inferior mode comes up, otherwise too late.
(setq python-shell-interpreter "ipython"
      python-shell-interpreter-args "--matplotlib=osx --colors=Linux"
      python-shell-prompt-regexp "In \\[[0-9]+\\]: "
      python-shell-prompt-output-regexp "Out\\[[0-9]+\\]: "
      python-shell-completion-setup-code
      "from IPython.core.completerlib import module_completion"
      python-shell-completion-module-string-code
      "';'.join(module_completion('''%s'''))\n"
      python-shell-completion-string-code
      "';'.join(get_ipython().Completer.all_completions('''%s'''))\n")

(add-hook 'inferior-python-mode-hook
	  (lambda ()
	    (set-process-query-on-exit-flag
	     ;; Just like killing the shell without asking me.
	     (get-process "Python") nil)))

(add-hook
 'python-mode-hook
 (lambda ()
   ;; (electric-pair-mode nil)
   (setq-local indent-tabs-mode nil)
   (setq-local tab-width 4)
   (setq-local python-indent 4)
   (hs-minor-mode)
   (define-key hs-minor-mode-map (kbd "C-c C-t") 'hs-toggle-hiding)
   (define-key python-mode-map (kbd "M-q") 'python-fill-paren)
   (define-key python-mode-map (kbd "M-]") 'jedi:goto-definition)
   (define-key python-mode-map (kbd "M-/") 'company-jedi)
   (define-key python-mode-map (kbd "M-[") 'jedi:goto-definition-pop-marker)
   (jedi:setup)
   (setq jedi:setup-keys t
	 ;; jedi:server-args
	 ;; '("--sys-path"
	 ;;   (concat "/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework"
	 ;; 	   "/Versions/3.5/lib/python3.5/site-packages"))
	 jedi:server-args
	 `("--sys-path"
	   ,(concat "/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework"
	 	   "/Versions/3.5/lib/python3.5/site-packages"))
	 jedi:complete-on-dot t)
   (let ((interpreter python-shell-interpreter)
	 (args python-shell-interpreter-args))
     (when python-shell--parent-buffer
       (python-util-clone-local-variables python-shell--parent-buffer))
     ;; 	;; Users can override default values for these vars when calling
     ;; 	;; `run-python'. This ensures new values let-bound in
     ;; 	;; `python-shell-make-comint' are locally set.
     (set (make-local-variable 'python-shell-interpreter) interpreter)
     (set (make-local-variable 'python-shell-interpreter-args) args))
   ;; Its so damn loud
   (flycheck-mode)
   (company-mode)
   (company-quickhelp-mode)
   (setq-local show-trailing-whitespace t)))
